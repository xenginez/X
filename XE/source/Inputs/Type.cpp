#include "Type.h"

BEG_META( XE::KeyCode )
{
	type->Value( "KeyBackspace", XE::KeyCode::KeyBackspace );
	type->Value( "KeyDelete", XE::KeyCode::KeyDelete );
	type->Value( "KeyTab", XE::KeyCode::KeyTab );
	type->Value( "KeyClear", XE::KeyCode::KeyClear );
	type->Value( "KeyReturn", XE::KeyCode::KeyReturn );
	type->Value( "KeyPause", XE::KeyCode::KeyPause );
	type->Value( "KeyEscape", XE::KeyCode::KeyEscape );
	type->Value( "KeySpace", XE::KeyCode::KeySpace );
	type->Value( "Key0", XE::KeyCode::Key0 );
	type->Value( "Key1", XE::KeyCode::Key1 );
	type->Value( "Key2", XE::KeyCode::Key2 );
	type->Value( "Key3", XE::KeyCode::Key3 );
	type->Value( "Key4", XE::KeyCode::Key4 );
	type->Value( "Key5", XE::KeyCode::Key5 );
	type->Value( "Key6", XE::KeyCode::Key6 );
	type->Value( "Key7", XE::KeyCode::Key7 );
	type->Value( "Key8", XE::KeyCode::Key8 );
	type->Value( "Key9", XE::KeyCode::Key9 );
	type->Value( "KeypadPeriod", XE::KeyCode::KeypadPeriod );
	type->Value( "KeypadDivide", XE::KeyCode::KeypadDivide );
	type->Value( "KeypadMultiply", XE::KeyCode::KeypadMultiply );
	type->Value( "KeypadMinus", XE::KeyCode::KeypadMinus );
	type->Value( "KeypadPlus", XE::KeyCode::KeypadPlus );
	type->Value( "KeypadEnter", XE::KeyCode::KeypadEnter );
	type->Value( "KeypadEquals", XE::KeyCode::KeypadEquals );
	type->Value( "KeyUpArrow", XE::KeyCode::KeyUpArrow );
	type->Value( "KeyDownArrow", XE::KeyCode::KeyDownArrow );
	type->Value( "KeyRightArrow", XE::KeyCode::KeyRightArrow );
	type->Value( "KeyLeftArrow", XE::KeyCode::KeyLeftArrow );
	type->Value( "KeyInsert", XE::KeyCode::KeyInsert );
	type->Value( "KeyHome", XE::KeyCode::KeyHome );
	type->Value( "KeyEnd", XE::KeyCode::KeyEnd );
	type->Value( "KeyPageUp", XE::KeyCode::KeyPageUp );
	type->Value( "KeyPageDown", XE::KeyCode::KeyPageDown );
	type->Value( "KeyF1", XE::KeyCode::KeyF1 );
	type->Value( "KeyF2", XE::KeyCode::KeyF2 );
	type->Value( "KeyF3", XE::KeyCode::KeyF3 );
	type->Value( "KeyF4", XE::KeyCode::KeyF4 );
	type->Value( "KeyF5", XE::KeyCode::KeyF5 );
	type->Value( "KeyF6", XE::KeyCode::KeyF6 );
	type->Value( "KeyF7", XE::KeyCode::KeyF7 );
	type->Value( "KeyF8", XE::KeyCode::KeyF8 );
	type->Value( "KeyF9", XE::KeyCode::KeyF9 );
	type->Value( "KeyF10", XE::KeyCode::KeyF10 );
	type->Value( "KeyF11", XE::KeyCode::KeyF11 );
	type->Value( "KeyF12", XE::KeyCode::KeyF12 );
	type->Value( "KeyF13", XE::KeyCode::KeyF13 );
	type->Value( "KeyF14", XE::KeyCode::KeyF14 );
	type->Value( "KeyF15", XE::KeyCode::KeyF15 );
	type->Value( "KeyExclaim", XE::KeyCode::KeyExclaim );
	type->Value( "KeyDoubleQuote", XE::KeyCode::KeyDoubleQuote );
	type->Value( "KeyHash", XE::KeyCode::KeyHash );
	type->Value( "KeyDollar", XE::KeyCode::KeyDollar );
	type->Value( "KeyAmpersand", XE::KeyCode::KeyAmpersand );
	type->Value( "KeyQuote", XE::KeyCode::KeyQuote );
	type->Value( "KeyLeftParen", XE::KeyCode::KeyLeftParen );
	type->Value( "KeyRightParen", XE::KeyCode::KeyRightParen );
	type->Value( "KeyAsterisk", XE::KeyCode::KeyAsterisk );
	type->Value( "KeyPlus", XE::KeyCode::KeyPlus );
	type->Value( "KeyComma", XE::KeyCode::KeyComma );
	type->Value( "KeyMinus", XE::KeyCode::KeyMinus );
	type->Value( "KeyPeriod", XE::KeyCode::KeyPeriod );
	type->Value( "KeySlash", XE::KeyCode::KeySlash );
	type->Value( "KeyColon", XE::KeyCode::KeyColon );
	type->Value( "KeySemicolon", XE::KeyCode::KeySemicolon );
	type->Value( "KeyLess", XE::KeyCode::KeyLess );
	type->Value( "KeyEquals", XE::KeyCode::KeyEquals );
	type->Value( "KeyGreater", XE::KeyCode::KeyGreater );
	type->Value( "KeyQuestion", XE::KeyCode::KeyQuestion );
	type->Value( "KeyAt", XE::KeyCode::KeyAt );
	type->Value( "KeyLeftBracket", XE::KeyCode::KeyLeftBracket );
	type->Value( "KeyBackslash", XE::KeyCode::KeyBackslash );
	type->Value( "KeyRightBracket", XE::KeyCode::KeyRightBracket );
	type->Value( "KeyCaret", XE::KeyCode::KeyCaret );
	type->Value( "KeyUnderscore", XE::KeyCode::KeyUnderscore );
	type->Value( "KeyBackQuote", XE::KeyCode::KeyBackQuote );
	type->Value( "KeyA", XE::KeyCode::KeyA );
	type->Value( "KeyB", XE::KeyCode::KeyB );
	type->Value( "KeyC", XE::KeyCode::KeyC );
	type->Value( "KeyD", XE::KeyCode::KeyD );
	type->Value( "KeyE", XE::KeyCode::KeyE );
	type->Value( "KeyF", XE::KeyCode::KeyF );
	type->Value( "KeyG", XE::KeyCode::KeyG );
	type->Value( "KeyH", XE::KeyCode::KeyH );
	type->Value( "KeyI", XE::KeyCode::KeyI );
	type->Value( "KeyJ", XE::KeyCode::KeyJ );
	type->Value( "KeyK", XE::KeyCode::KeyK );
	type->Value( "KeyL", XE::KeyCode::KeyL );
	type->Value( "KeyM", XE::KeyCode::KeyM );
	type->Value( "KeyN", XE::KeyCode::KeyN );
	type->Value( "KeyO", XE::KeyCode::KeyO );
	type->Value( "KeyP", XE::KeyCode::KeyP );
	type->Value( "KeyQ", XE::KeyCode::KeyQ );
	type->Value( "KeyR", XE::KeyCode::KeyR );
	type->Value( "KeyS", XE::KeyCode::KeyS );
	type->Value( "KeyT", XE::KeyCode::KeyT );
	type->Value( "KeyU", XE::KeyCode::KeyU );
	type->Value( "KeyV", XE::KeyCode::KeyV );
	type->Value( "KeyW", XE::KeyCode::KeyW );
	type->Value( "KeyX", XE::KeyCode::KeyX );
	type->Value( "KeyY", XE::KeyCode::KeyY );
	type->Value( "KeyZ", XE::KeyCode::KeyZ );
	type->Value( "KeyNumlock", XE::KeyCode::KeyNumlock );
	type->Value( "KeyCapsLock", XE::KeyCode::KeyCapsLock );
	type->Value( "KeyScrollLock", XE::KeyCode::KeyScrollLock );
	type->Value( "KeyRightShift", XE::KeyCode::KeyRightShift );
	type->Value( "KeyLeftShift", XE::KeyCode::KeyLeftShift );
	type->Value( "KeyRightControl", XE::KeyCode::KeyRightControl );
	type->Value( "KeyLeftControl", XE::KeyCode::KeyLeftControl );
	type->Value( "KeyRightAlt", XE::KeyCode::KeyRightAlt );
	type->Value( "KeyLeftAlt", XE::KeyCode::KeyLeftAlt );
	type->Value( "KeyLeftCommand", XE::KeyCode::KeyLeftCommand );
	type->Value( "KeyRightCommand", XE::KeyCode::KeyRightCommand );
	type->Value( "KeyAltGr", XE::KeyCode::KeyAltGr );
	type->Value( "KeyHelp", XE::KeyCode::KeyHelp );
	type->Value( "KeyPrint", XE::KeyCode::KeyPrint );
	type->Value( "KeySysReq", XE::KeyCode::KeySysReq );
	type->Value( "KeyBreak", XE::KeyCode::KeyBreak );
	type->Value( "KeyMenu", XE::KeyCode::KeyMenu );
}
END_META()

BEG_META( XE::PadCode )
{
	{
		type->Value( "Pad0ButtonLeftStickX", XE::PadCode::Pad0ButtonLeftStickX );
		type->Value( "Pad0ButtonLeftStickY", XE::PadCode::Pad0ButtonLeftStickY );
		type->Value( "Pad0ButtonRightStickX", XE::PadCode::Pad0ButtonRightStickX );
		type->Value( "Pad0ButtonRightStickY", XE::PadCode::Pad0ButtonRightStickY );
		type->Value( "Pad0ButtonAxis4", XE::PadCode::Pad0ButtonAxis4 );
		type->Value( "Pad0ButtonAxis5", XE::PadCode::Pad0ButtonAxis5 );
		type->Value( "Pad0ButtonAxis6", XE::PadCode::Pad0ButtonAxis6 );
		type->Value( "Pad0ButtonAxis7", XE::PadCode::Pad0ButtonAxis7 );
		type->Value( "Pad0ButtonAxis8", XE::PadCode::Pad0ButtonAxis8 );
		type->Value( "Pad0ButtonAxis9", XE::PadCode::Pad0ButtonAxis9 );
		type->Value( "Pad0ButtonAxis10", XE::PadCode::Pad0ButtonAxis10 );
		type->Value( "Pad0ButtonAxis11", XE::PadCode::Pad0ButtonAxis11 );
		type->Value( "Pad0ButtonAxis12", XE::PadCode::Pad0ButtonAxis12 );
		type->Value( "Pad0ButtonAxis13", XE::PadCode::Pad0ButtonAxis13 );
		type->Value( "Pad0ButtonAxis14", XE::PadCode::Pad0ButtonAxis14 );
		type->Value( "Pad0ButtonAxis15", XE::PadCode::Pad0ButtonAxis15 );
		type->Value( "Pad0ButtonAxis16", XE::PadCode::Pad0ButtonAxis16 );
		type->Value( "Pad0ButtonAxis17", XE::PadCode::Pad0ButtonAxis17 );
		type->Value( "Pad0ButtonAxis18", XE::PadCode::Pad0ButtonAxis18 );
		type->Value( "Pad0ButtonAxis19", XE::PadCode::Pad0ButtonAxis19 );
		type->Value( "Pad0ButtonAxis20", XE::PadCode::Pad0ButtonAxis20 );
		type->Value( "Pad0ButtonAxis21", XE::PadCode::Pad0ButtonAxis21 );
		type->Value( "Pad0ButtonAxis22", XE::PadCode::Pad0ButtonAxis22 );
		type->Value( "Pad0ButtonAxis23", XE::PadCode::Pad0ButtonAxis23 );
		type->Value( "Pad0ButtonAxis24", XE::PadCode::Pad0ButtonAxis24 );
		type->Value( "Pad0ButtonAxis25", XE::PadCode::Pad0ButtonAxis25 );
		type->Value( "Pad0ButtonAxis26", XE::PadCode::Pad0ButtonAxis26 );
		type->Value( "Pad0ButtonAxis27", XE::PadCode::Pad0ButtonAxis27 );
		type->Value( "Pad0ButtonAxis28", XE::PadCode::Pad0ButtonAxis28 );
		type->Value( "Pad0ButtonAxis29", XE::PadCode::Pad0ButtonAxis29 );
		type->Value( "Pad0ButtonAxis30", XE::PadCode::Pad0ButtonAxis30 );
		type->Value( "Pad0ButtonAxis31", XE::PadCode::Pad0ButtonAxis31 );
		type->Value( "Pad0ButtonAccelerationX", XE::PadCode::Pad0ButtonAccelerationX );
		type->Value( "Pad0ButtonAccelerationY", XE::PadCode::Pad0ButtonAccelerationY );
		type->Value( "Pad0ButtonAccelerationZ", XE::PadCode::Pad0ButtonAccelerationZ );
		type->Value( "Pad0ButtonGravityX", XE::PadCode::Pad0ButtonGravityX );
		type->Value( "Pad0ButtonGravityY", XE::PadCode::Pad0ButtonGravityY );
		type->Value( "Pad0ButtonGravityZ", XE::PadCode::Pad0ButtonGravityZ );
		type->Value( "Pad0ButtonGyroscopeX", XE::PadCode::Pad0ButtonGyroscopeX );
		type->Value( "Pad0ButtonGyroscopeY", XE::PadCode::Pad0ButtonGyroscopeY );
		type->Value( "Pad0ButtonGyroscopeZ", XE::PadCode::Pad0ButtonGyroscopeZ );
		type->Value( "Pad0ButtonMagneticFieldX", XE::PadCode::Pad0ButtonMagneticFieldX );
		type->Value( "Pad0ButtonMagneticFieldY", XE::PadCode::Pad0ButtonMagneticFieldY );
		type->Value( "Pad0ButtonMagneticFieldZ", XE::PadCode::Pad0ButtonMagneticFieldZ );
		type->Value( "Pad0ButtonStart", XE::PadCode::Pad0ButtonStart );
		type->Value( "Pad0ButtonSelect", XE::PadCode::Pad0ButtonSelect );
		type->Value( "Pad0ButtonLeft", XE::PadCode::Pad0ButtonLeft );
		type->Value( "Pad0ButtonRight", XE::PadCode::Pad0ButtonRight );
		type->Value( "Pad0ButtonUp", XE::PadCode::Pad0ButtonUp );
		type->Value( "Pad0ButtonDown", XE::PadCode::Pad0ButtonDown );
		type->Value( "Pad0ButtonA", XE::PadCode::Pad0ButtonA );
		type->Value( "Pad0ButtonB", XE::PadCode::Pad0ButtonB );
		type->Value( "Pad0ButtonX", XE::PadCode::Pad0ButtonX );
		type->Value( "Pad0ButtonY", XE::PadCode::Pad0ButtonY );
		type->Value( "Pad0ButtonL1", XE::PadCode::Pad0ButtonL1 );
		type->Value( "Pad0ButtonR1", XE::PadCode::Pad0ButtonR1 );
		type->Value( "Pad0ButtonL2", XE::PadCode::Pad0ButtonL2 );
		type->Value( "Pad0ButtonR2", XE::PadCode::Pad0ButtonR2 );
		type->Value( "Pad0ButtonL3", XE::PadCode::Pad0ButtonL3 );
		type->Value( "Pad0ButtonR3", XE::PadCode::Pad0ButtonR3 );
		type->Value( "Pad0ButtonHome", XE::PadCode::Pad0ButtonHome );
		type->Value( "Pad0Button17", XE::PadCode::Pad0Button17 );
		type->Value( "Pad0Button18", XE::PadCode::Pad0Button18 );
		type->Value( "Pad0Button19", XE::PadCode::Pad0Button19 );
		type->Value( "Pad0Button20", XE::PadCode::Pad0Button20 );
		type->Value( "Pad0Button21", XE::PadCode::Pad0Button21 );
		type->Value( "Pad0Button22", XE::PadCode::Pad0Button22 );
		type->Value( "Pad0Button23", XE::PadCode::Pad0Button23 );
		type->Value( "Pad0Button24", XE::PadCode::Pad0Button24 );
		type->Value( "Pad0Button25", XE::PadCode::Pad0Button25 );
		type->Value( "Pad0Button26", XE::PadCode::Pad0Button26 );
		type->Value( "Pad0Button27", XE::PadCode::Pad0Button27 );
		type->Value( "Pad0Button28", XE::PadCode::Pad0Button28 );
		type->Value( "Pad0Button29", XE::PadCode::Pad0Button29 );
		type->Value( "Pad0Button30", XE::PadCode::Pad0Button30 );
		type->Value( "Pad0Button31", XE::PadCode::Pad0Button31 );
	}

	{
		type->Value( "Pad1ButtonLeftStickX", XE::PadCode::Pad1ButtonLeftStickX );
		type->Value( "Pad1ButtonLeftStickY", XE::PadCode::Pad1ButtonLeftStickY );
		type->Value( "Pad1ButtonRightStickX", XE::PadCode::Pad1ButtonRightStickX );
		type->Value( "Pad1ButtonRightStickY", XE::PadCode::Pad1ButtonRightStickY );
		type->Value( "Pad1ButtonAxis4", XE::PadCode::Pad1ButtonAxis4 );
		type->Value( "Pad1ButtonAxis5", XE::PadCode::Pad1ButtonAxis5 );
		type->Value( "Pad1ButtonAxis6", XE::PadCode::Pad1ButtonAxis6 );
		type->Value( "Pad1ButtonAxis7", XE::PadCode::Pad1ButtonAxis7 );
		type->Value( "Pad1ButtonAxis8", XE::PadCode::Pad1ButtonAxis8 );
		type->Value( "Pad1ButtonAxis9", XE::PadCode::Pad1ButtonAxis9 );
		type->Value( "Pad1ButtonAxis10", XE::PadCode::Pad1ButtonAxis10 );
		type->Value( "Pad1ButtonAxis11", XE::PadCode::Pad1ButtonAxis11 );
		type->Value( "Pad1ButtonAxis12", XE::PadCode::Pad1ButtonAxis12 );
		type->Value( "Pad1ButtonAxis13", XE::PadCode::Pad1ButtonAxis13 );
		type->Value( "Pad1ButtonAxis14", XE::PadCode::Pad1ButtonAxis14 );
		type->Value( "Pad1ButtonAxis15", XE::PadCode::Pad1ButtonAxis15 );
		type->Value( "Pad1ButtonAxis16", XE::PadCode::Pad1ButtonAxis16 );
		type->Value( "Pad1ButtonAxis17", XE::PadCode::Pad1ButtonAxis17 );
		type->Value( "Pad1ButtonAxis18", XE::PadCode::Pad1ButtonAxis18 );
		type->Value( "Pad1ButtonAxis19", XE::PadCode::Pad1ButtonAxis19 );
		type->Value( "Pad1ButtonAxis20", XE::PadCode::Pad1ButtonAxis20 );
		type->Value( "Pad1ButtonAxis21", XE::PadCode::Pad1ButtonAxis21 );
		type->Value( "Pad1ButtonAxis22", XE::PadCode::Pad1ButtonAxis22 );
		type->Value( "Pad1ButtonAxis23", XE::PadCode::Pad1ButtonAxis23 );
		type->Value( "Pad1ButtonAxis24", XE::PadCode::Pad1ButtonAxis24 );
		type->Value( "Pad1ButtonAxis25", XE::PadCode::Pad1ButtonAxis25 );
		type->Value( "Pad1ButtonAxis26", XE::PadCode::Pad1ButtonAxis26 );
		type->Value( "Pad1ButtonAxis27", XE::PadCode::Pad1ButtonAxis27 );
		type->Value( "Pad1ButtonAxis28", XE::PadCode::Pad1ButtonAxis28 );
		type->Value( "Pad1ButtonAxis29", XE::PadCode::Pad1ButtonAxis29 );
		type->Value( "Pad1ButtonAxis30", XE::PadCode::Pad1ButtonAxis30 );
		type->Value( "Pad1ButtonAxis31", XE::PadCode::Pad1ButtonAxis31 );
		type->Value( "Pad1ButtonAccelerationX", XE::PadCode::Pad1ButtonAccelerationX );
		type->Value( "Pad1ButtonAccelerationY", XE::PadCode::Pad1ButtonAccelerationY );
		type->Value( "Pad1ButtonAccelerationZ", XE::PadCode::Pad1ButtonAccelerationZ );
		type->Value( "Pad1ButtonGravityX", XE::PadCode::Pad1ButtonGravityX );
		type->Value( "Pad1ButtonGravityY", XE::PadCode::Pad1ButtonGravityY );
		type->Value( "Pad1ButtonGravityZ", XE::PadCode::Pad1ButtonGravityZ );
		type->Value( "Pad1ButtonGyroscopeX", XE::PadCode::Pad1ButtonGyroscopeX );
		type->Value( "Pad1ButtonGyroscopeY", XE::PadCode::Pad1ButtonGyroscopeY );
		type->Value( "Pad1ButtonGyroscopeZ", XE::PadCode::Pad1ButtonGyroscopeZ );
		type->Value( "Pad1ButtonMagneticFieldX", XE::PadCode::Pad1ButtonMagneticFieldX );
		type->Value( "Pad1ButtonMagneticFieldY", XE::PadCode::Pad1ButtonMagneticFieldY );
		type->Value( "Pad1ButtonMagneticFieldZ", XE::PadCode::Pad1ButtonMagneticFieldZ );
		type->Value( "Pad1ButtonStart", XE::PadCode::Pad1ButtonStart );
		type->Value( "Pad1ButtonSelect", XE::PadCode::Pad1ButtonSelect );
		type->Value( "Pad1ButtonLeft", XE::PadCode::Pad1ButtonLeft );
		type->Value( "Pad1ButtonRight", XE::PadCode::Pad1ButtonRight );
		type->Value( "Pad1ButtonUp", XE::PadCode::Pad1ButtonUp );
		type->Value( "Pad1ButtonDown", XE::PadCode::Pad1ButtonDown );
		type->Value( "Pad1ButtonA", XE::PadCode::Pad1ButtonA );
		type->Value( "Pad1ButtonB", XE::PadCode::Pad1ButtonB );
		type->Value( "Pad1ButtonX", XE::PadCode::Pad1ButtonX );
		type->Value( "Pad1ButtonY", XE::PadCode::Pad1ButtonY );
		type->Value( "Pad1ButtonL1", XE::PadCode::Pad1ButtonL1 );
		type->Value( "Pad1ButtonR1", XE::PadCode::Pad1ButtonR1 );
		type->Value( "Pad1ButtonL2", XE::PadCode::Pad1ButtonL2 );
		type->Value( "Pad1ButtonR2", XE::PadCode::Pad1ButtonR2 );
		type->Value( "Pad1ButtonL3", XE::PadCode::Pad1ButtonL3 );
		type->Value( "Pad1ButtonR3", XE::PadCode::Pad1ButtonR3 );
		type->Value( "Pad1ButtonHome", XE::PadCode::Pad1ButtonHome );
		type->Value( "Pad1Button17", XE::PadCode::Pad1Button17 );
		type->Value( "Pad1Button18", XE::PadCode::Pad1Button18 );
		type->Value( "Pad1Button19", XE::PadCode::Pad1Button19 );
		type->Value( "Pad1Button20", XE::PadCode::Pad1Button20 );
		type->Value( "Pad1Button21", XE::PadCode::Pad1Button21 );
		type->Value( "Pad1Button22", XE::PadCode::Pad1Button22 );
		type->Value( "Pad1Button23", XE::PadCode::Pad1Button23 );
		type->Value( "Pad1Button24", XE::PadCode::Pad1Button24 );
		type->Value( "Pad1Button25", XE::PadCode::Pad1Button25 );
		type->Value( "Pad1Button26", XE::PadCode::Pad1Button26 );
		type->Value( "Pad1Button27", XE::PadCode::Pad1Button27 );
		type->Value( "Pad1Button28", XE::PadCode::Pad1Button28 );
		type->Value( "Pad1Button29", XE::PadCode::Pad1Button29 );
		type->Value( "Pad1Button30", XE::PadCode::Pad1Button30 );
		type->Value( "Pad1Button31", XE::PadCode::Pad1Button31 );
	}

	{
		type->Value( "Pad2ButtonLeftStickX", XE::PadCode::Pad2ButtonLeftStickX );
		type->Value( "Pad2ButtonLeftStickY", XE::PadCode::Pad2ButtonLeftStickY );
		type->Value( "Pad2ButtonRightStickX", XE::PadCode::Pad2ButtonRightStickX );
		type->Value( "Pad2ButtonRightStickY", XE::PadCode::Pad2ButtonRightStickY );
		type->Value( "Pad2ButtonAxis4", XE::PadCode::Pad2ButtonAxis4 );
		type->Value( "Pad2ButtonAxis5", XE::PadCode::Pad2ButtonAxis5 );
		type->Value( "Pad2ButtonAxis6", XE::PadCode::Pad2ButtonAxis6 );
		type->Value( "Pad2ButtonAxis7", XE::PadCode::Pad2ButtonAxis7 );
		type->Value( "Pad2ButtonAxis8", XE::PadCode::Pad2ButtonAxis8 );
		type->Value( "Pad2ButtonAxis9", XE::PadCode::Pad2ButtonAxis9 );
		type->Value( "Pad2ButtonAxis10", XE::PadCode::Pad2ButtonAxis10 );
		type->Value( "Pad2ButtonAxis11", XE::PadCode::Pad2ButtonAxis11 );
		type->Value( "Pad2ButtonAxis12", XE::PadCode::Pad2ButtonAxis12 );
		type->Value( "Pad2ButtonAxis13", XE::PadCode::Pad2ButtonAxis13 );
		type->Value( "Pad2ButtonAxis14", XE::PadCode::Pad2ButtonAxis14 );
		type->Value( "Pad2ButtonAxis15", XE::PadCode::Pad2ButtonAxis15 );
		type->Value( "Pad2ButtonAxis16", XE::PadCode::Pad2ButtonAxis16 );
		type->Value( "Pad2ButtonAxis17", XE::PadCode::Pad2ButtonAxis17 );
		type->Value( "Pad2ButtonAxis18", XE::PadCode::Pad2ButtonAxis18 );
		type->Value( "Pad2ButtonAxis19", XE::PadCode::Pad2ButtonAxis19 );
		type->Value( "Pad2ButtonAxis20", XE::PadCode::Pad2ButtonAxis20 );
		type->Value( "Pad2ButtonAxis21", XE::PadCode::Pad2ButtonAxis21 );
		type->Value( "Pad2ButtonAxis22", XE::PadCode::Pad2ButtonAxis22 );
		type->Value( "Pad2ButtonAxis23", XE::PadCode::Pad2ButtonAxis23 );
		type->Value( "Pad2ButtonAxis24", XE::PadCode::Pad2ButtonAxis24 );
		type->Value( "Pad2ButtonAxis25", XE::PadCode::Pad2ButtonAxis25 );
		type->Value( "Pad2ButtonAxis26", XE::PadCode::Pad2ButtonAxis26 );
		type->Value( "Pad2ButtonAxis27", XE::PadCode::Pad2ButtonAxis27 );
		type->Value( "Pad2ButtonAxis28", XE::PadCode::Pad2ButtonAxis28 );
		type->Value( "Pad2ButtonAxis29", XE::PadCode::Pad2ButtonAxis29 );
		type->Value( "Pad2ButtonAxis30", XE::PadCode::Pad2ButtonAxis30 );
		type->Value( "Pad2ButtonAxis31", XE::PadCode::Pad2ButtonAxis31 );
		type->Value( "Pad2ButtonAccelerationX", XE::PadCode::Pad2ButtonAccelerationX );
		type->Value( "Pad2ButtonAccelerationY", XE::PadCode::Pad2ButtonAccelerationY );
		type->Value( "Pad2ButtonAccelerationZ", XE::PadCode::Pad2ButtonAccelerationZ );
		type->Value( "Pad2ButtonGravityX", XE::PadCode::Pad2ButtonGravityX );
		type->Value( "Pad2ButtonGravityY", XE::PadCode::Pad2ButtonGravityY );
		type->Value( "Pad2ButtonGravityZ", XE::PadCode::Pad2ButtonGravityZ );
		type->Value( "Pad2ButtonGyroscopeX", XE::PadCode::Pad2ButtonGyroscopeX );
		type->Value( "Pad2ButtonGyroscopeY", XE::PadCode::Pad2ButtonGyroscopeY );
		type->Value( "Pad2ButtonGyroscopeZ", XE::PadCode::Pad2ButtonGyroscopeZ );
		type->Value( "Pad2ButtonMagneticFieldX", XE::PadCode::Pad2ButtonMagneticFieldX );
		type->Value( "Pad2ButtonMagneticFieldY", XE::PadCode::Pad2ButtonMagneticFieldY );
		type->Value( "Pad2ButtonMagneticFieldZ", XE::PadCode::Pad2ButtonMagneticFieldZ );
		type->Value( "Pad2ButtonStart", XE::PadCode::Pad2ButtonStart );
		type->Value( "Pad2ButtonSelect", XE::PadCode::Pad2ButtonSelect );
		type->Value( "Pad2ButtonLeft", XE::PadCode::Pad2ButtonLeft );
		type->Value( "Pad2ButtonRight", XE::PadCode::Pad2ButtonRight );
		type->Value( "Pad2ButtonUp", XE::PadCode::Pad2ButtonUp );
		type->Value( "Pad2ButtonDown", XE::PadCode::Pad2ButtonDown );
		type->Value( "Pad2ButtonA", XE::PadCode::Pad2ButtonA );
		type->Value( "Pad2ButtonB", XE::PadCode::Pad2ButtonB );
		type->Value( "Pad2ButtonX", XE::PadCode::Pad2ButtonX );
		type->Value( "Pad2ButtonY", XE::PadCode::Pad2ButtonY );
		type->Value( "Pad2ButtonL1", XE::PadCode::Pad2ButtonL1 );
		type->Value( "Pad2ButtonR1", XE::PadCode::Pad2ButtonR1 );
		type->Value( "Pad2ButtonL2", XE::PadCode::Pad2ButtonL2 );
		type->Value( "Pad2ButtonR2", XE::PadCode::Pad2ButtonR2 );
		type->Value( "Pad2ButtonL3", XE::PadCode::Pad2ButtonL3 );
		type->Value( "Pad2ButtonR3", XE::PadCode::Pad2ButtonR3 );
		type->Value( "Pad2ButtonHome", XE::PadCode::Pad2ButtonHome );
		type->Value( "Pad2Button17", XE::PadCode::Pad2Button17 );
		type->Value( "Pad2Button18", XE::PadCode::Pad2Button18 );
		type->Value( "Pad2Button19", XE::PadCode::Pad2Button19 );
		type->Value( "Pad2Button20", XE::PadCode::Pad2Button20 );
		type->Value( "Pad2Button21", XE::PadCode::Pad2Button21 );
		type->Value( "Pad2Button22", XE::PadCode::Pad2Button22 );
		type->Value( "Pad2Button23", XE::PadCode::Pad2Button23 );
		type->Value( "Pad2Button24", XE::PadCode::Pad2Button24 );
		type->Value( "Pad2Button25", XE::PadCode::Pad2Button25 );
		type->Value( "Pad2Button26", XE::PadCode::Pad2Button26 );
		type->Value( "Pad2Button27", XE::PadCode::Pad2Button27 );
		type->Value( "Pad2Button28", XE::PadCode::Pad2Button28 );
		type->Value( "Pad2Button29", XE::PadCode::Pad2Button29 );
		type->Value( "Pad2Button30", XE::PadCode::Pad2Button30 );
		type->Value( "Pad2Button31", XE::PadCode::Pad2Button31 );
	}

	{
		type->Value( "Pad3ButtonLeftStickX", XE::PadCode::Pad3ButtonLeftStickX );
		type->Value( "Pad3ButtonLeftStickY", XE::PadCode::Pad3ButtonLeftStickY );
		type->Value( "Pad3ButtonRightStickX", XE::PadCode::Pad3ButtonRightStickX );
		type->Value( "Pad3ButtonRightStickY", XE::PadCode::Pad3ButtonRightStickY );
		type->Value( "Pad3ButtonAxis4", XE::PadCode::Pad3ButtonAxis4 );
		type->Value( "Pad3ButtonAxis5", XE::PadCode::Pad3ButtonAxis5 );
		type->Value( "Pad3ButtonAxis6", XE::PadCode::Pad3ButtonAxis6 );
		type->Value( "Pad3ButtonAxis7", XE::PadCode::Pad3ButtonAxis7 );
		type->Value( "Pad3ButtonAxis8", XE::PadCode::Pad3ButtonAxis8 );
		type->Value( "Pad3ButtonAxis9", XE::PadCode::Pad3ButtonAxis9 );
		type->Value( "Pad3ButtonAxis10", XE::PadCode::Pad3ButtonAxis10 );
		type->Value( "Pad3ButtonAxis11", XE::PadCode::Pad3ButtonAxis11 );
		type->Value( "Pad3ButtonAxis12", XE::PadCode::Pad3ButtonAxis12 );
		type->Value( "Pad3ButtonAxis13", XE::PadCode::Pad3ButtonAxis13 );
		type->Value( "Pad3ButtonAxis14", XE::PadCode::Pad3ButtonAxis14 );
		type->Value( "Pad3ButtonAxis15", XE::PadCode::Pad3ButtonAxis15 );
		type->Value( "Pad3ButtonAxis16", XE::PadCode::Pad3ButtonAxis16 );
		type->Value( "Pad3ButtonAxis17", XE::PadCode::Pad3ButtonAxis17 );
		type->Value( "Pad3ButtonAxis18", XE::PadCode::Pad3ButtonAxis18 );
		type->Value( "Pad3ButtonAxis19", XE::PadCode::Pad3ButtonAxis19 );
		type->Value( "Pad3ButtonAxis20", XE::PadCode::Pad3ButtonAxis20 );
		type->Value( "Pad3ButtonAxis21", XE::PadCode::Pad3ButtonAxis21 );
		type->Value( "Pad3ButtonAxis22", XE::PadCode::Pad3ButtonAxis22 );
		type->Value( "Pad3ButtonAxis23", XE::PadCode::Pad3ButtonAxis23 );
		type->Value( "Pad3ButtonAxis24", XE::PadCode::Pad3ButtonAxis24 );
		type->Value( "Pad3ButtonAxis25", XE::PadCode::Pad3ButtonAxis25 );
		type->Value( "Pad3ButtonAxis26", XE::PadCode::Pad3ButtonAxis26 );
		type->Value( "Pad3ButtonAxis27", XE::PadCode::Pad3ButtonAxis27 );
		type->Value( "Pad3ButtonAxis28", XE::PadCode::Pad3ButtonAxis28 );
		type->Value( "Pad3ButtonAxis29", XE::PadCode::Pad3ButtonAxis29 );
		type->Value( "Pad3ButtonAxis30", XE::PadCode::Pad3ButtonAxis30 );
		type->Value( "Pad3ButtonAxis31", XE::PadCode::Pad3ButtonAxis31 );
		type->Value( "Pad3ButtonAccelerationX", XE::PadCode::Pad3ButtonAccelerationX );
		type->Value( "Pad3ButtonAccelerationY", XE::PadCode::Pad3ButtonAccelerationY );
		type->Value( "Pad3ButtonAccelerationZ", XE::PadCode::Pad3ButtonAccelerationZ );
		type->Value( "Pad3ButtonGravityX", XE::PadCode::Pad3ButtonGravityX );
		type->Value( "Pad3ButtonGravityY", XE::PadCode::Pad3ButtonGravityY );
		type->Value( "Pad3ButtonGravityZ", XE::PadCode::Pad3ButtonGravityZ );
		type->Value( "Pad3ButtonGyroscopeX", XE::PadCode::Pad3ButtonGyroscopeX );
		type->Value( "Pad3ButtonGyroscopeY", XE::PadCode::Pad3ButtonGyroscopeY );
		type->Value( "Pad3ButtonGyroscopeZ", XE::PadCode::Pad3ButtonGyroscopeZ );
		type->Value( "Pad3ButtonMagneticFieldX", XE::PadCode::Pad3ButtonMagneticFieldX );
		type->Value( "Pad3ButtonMagneticFieldY", XE::PadCode::Pad3ButtonMagneticFieldY );
		type->Value( "Pad3ButtonMagneticFieldZ", XE::PadCode::Pad3ButtonMagneticFieldZ );
		type->Value( "Pad3ButtonStart", XE::PadCode::Pad3ButtonStart );
		type->Value( "Pad3ButtonSelect", XE::PadCode::Pad3ButtonSelect );
		type->Value( "Pad3ButtonLeft", XE::PadCode::Pad3ButtonLeft );
		type->Value( "Pad3ButtonRight", XE::PadCode::Pad3ButtonRight );
		type->Value( "Pad3ButtonUp", XE::PadCode::Pad3ButtonUp );
		type->Value( "Pad3ButtonDown", XE::PadCode::Pad3ButtonDown );
		type->Value( "Pad3ButtonA", XE::PadCode::Pad3ButtonA );
		type->Value( "Pad3ButtonB", XE::PadCode::Pad3ButtonB );
		type->Value( "Pad3ButtonX", XE::PadCode::Pad3ButtonX );
		type->Value( "Pad3ButtonY", XE::PadCode::Pad3ButtonY );
		type->Value( "Pad3ButtonL1", XE::PadCode::Pad3ButtonL1 );
		type->Value( "Pad3ButtonR1", XE::PadCode::Pad3ButtonR1 );
		type->Value( "Pad3ButtonL2", XE::PadCode::Pad3ButtonL2 );
		type->Value( "Pad3ButtonR2", XE::PadCode::Pad3ButtonR2 );
		type->Value( "Pad3ButtonL3", XE::PadCode::Pad3ButtonL3 );
		type->Value( "Pad3ButtonR3", XE::PadCode::Pad3ButtonR3 );
		type->Value( "Pad3ButtonHome", XE::PadCode::Pad3ButtonHome );
		type->Value( "Pad3Button17", XE::PadCode::Pad3Button17 );
		type->Value( "Pad3Button18", XE::PadCode::Pad3Button18 );
		type->Value( "Pad3Button19", XE::PadCode::Pad3Button19 );
		type->Value( "Pad3Button20", XE::PadCode::Pad3Button20 );
		type->Value( "Pad3Button21", XE::PadCode::Pad3Button21 );
		type->Value( "Pad3Button22", XE::PadCode::Pad3Button22 );
		type->Value( "Pad3Button23", XE::PadCode::Pad3Button23 );
		type->Value( "Pad3Button24", XE::PadCode::Pad3Button24 );
		type->Value( "Pad3Button25", XE::PadCode::Pad3Button25 );
		type->Value( "Pad3Button26", XE::PadCode::Pad3Button26 );
		type->Value( "Pad3Button27", XE::PadCode::Pad3Button27 );
		type->Value( "Pad3Button28", XE::PadCode::Pad3Button28 );
		type->Value( "Pad3Button29", XE::PadCode::Pad3Button29 );
		type->Value( "Pad3Button30", XE::PadCode::Pad3Button30 );
		type->Value( "Pad3Button31", XE::PadCode::Pad3Button31 );
	}
}
END_META()

BEG_META( XE::MouseCode )
{
	type->Value( "MousePos", XE::MouseCode::MousePos );
	type->Value( "MouseAxisX", XE::MouseCode::MouseAxisX );
	type->Value( "MouseAxisY", XE::MouseCode::MouseAxisY );
	type->Value( "MouseWheel", XE::MouseCode::MouseWheel );
	type->Value( "MouseHWheel", XE::MouseCode::MouseHWheel );
	type->Value( "MouseLeft", XE::MouseCode::MouseLeft );
	type->Value( "MouseMiddle", XE::MouseCode::MouseMiddle );
	type->Value( "MouseRight", XE::MouseCode::MouseRight );
	type->Value( "MouseButton4", XE::MouseCode::MouseButton4 );
	type->Value( "MouseButton5", XE::MouseCode::MouseButton5 );
	type->Value( "MouseButton6", XE::MouseCode::MouseButton6 );
	type->Value( "MouseButton7", XE::MouseCode::MouseButton7 );
	type->Value( "MouseButton8", XE::MouseCode::MouseButton8 );
	type->Value( "MouseButton9", XE::MouseCode::MouseButton9 );
}
END_META()

BEG_META( XE::TouchCode )
{
	type->Value( "Touch0Down", XE::TouchCode::Touch0Down );
	type->Value( "Touch0X", XE::TouchCode::Touch0X );
	type->Value( "Touch0Y", XE::TouchCode::Touch0Y );
	type->Value( "Touch0Z", XE::TouchCode::Touch0Z );
	type->Value( "Touch1Down", XE::TouchCode::Touch1Down );
	type->Value( "Touch1X", XE::TouchCode::Touch1X );
	type->Value( "Touch1Y", XE::TouchCode::Touch1Y );
	type->Value( "Touch1Z", XE::TouchCode::Touch1Z );
	type->Value( "Touch2Down", XE::TouchCode::Touch2Down );
	type->Value( "Touch2X", XE::TouchCode::Touch2X );
	type->Value( "Touch2Y", XE::TouchCode::Touch2Y );
	type->Value( "Touch2Z", XE::TouchCode::Touch2Z );
	type->Value( "Touch3Down", XE::TouchCode::Touch3Down );
	type->Value( "Touch3X", XE::TouchCode::Touch3X );
	type->Value( "Touch3Y", XE::TouchCode::Touch3Y );
	type->Value( "Touch3Z", XE::TouchCode::Touch3Z );
	type->Value( "Touch4Down", XE::TouchCode::Touch4Down );
	type->Value( "Touch4X", XE::TouchCode::Touch4X );
	type->Value( "Touch4Y", XE::TouchCode::Touch4Y );
	type->Value( "Touch4Z", XE::TouchCode::Touch4Z );
	type->Value( "Touch5Down", XE::TouchCode::Touch5Down );
	type->Value( "Touch5X", XE::TouchCode::Touch5X );
	type->Value( "Touch5Y", XE::TouchCode::Touch5Y );
	type->Value( "Touch5Z", XE::TouchCode::Touch5Z );
	type->Value( "Touch6Down", XE::TouchCode::Touch6Down );
	type->Value( "Touch6X", XE::TouchCode::Touch6X );
	type->Value( "Touch6Y", XE::TouchCode::Touch6Y );
	type->Value( "Touch6Z", XE::TouchCode::Touch6Z );
	type->Value( "Touch7Down", XE::TouchCode::Touch7Down );
	type->Value( "Touch7X", XE::TouchCode::Touch7X );
	type->Value( "Touch7Y", XE::TouchCode::Touch7Y );
	type->Value( "Touch7Z", XE::TouchCode::Touch7Z );
}
END_META()

BEG_META( XE::InputStateItemTimeoutType )
{
	type->Value( "TIME", XE::InputStateItemTimeoutType::TIME );
	type->Value( "FRAME", XE::InputStateItemTimeoutType::FRAME );
	type->Value( "UNSCALE_TIME", XE::InputStateItemTimeoutType::UNSCALE_TIME );
}
END_META()

BEG_META( XE::InputEventInfo )
{
}
END_META()
