cmake_minimum_required(VERSION 3.13)

project(X)

option(X_BUILD_XE "build XE library" OFF)
option(X_BUILD_XS "build XS library" OFF)
option(X_BUILD_XV "build XV library" OFF)
option(X_SHARED_LIBS "build dynamic library" ON)

if (CMAKE_SYSTEM_NAME MATCHES "Linux")
	set(X_PLATFORM linux)
elseif (CMAKE_SYSTEM_NAME MATCHES "IOS")
	set(X_PLATFORM ios)
elseif (CMAKE_SYSTEM_NAME MATCHES "Darwin")
	set(X_PLATFORM mac)
elseif (CMAKE_SYSTEM_NAME MATCHES "Android")
	set(X_PLATFORM android)
elseif (CMAKE_SYSTEM_NAME MATCHES "Windows")
	set(X_PLATFORM win)
else ()
	message(FATAL_ERROR ${CMAKE_SYSTEM_NAME}"Other Platform")
endif ()


if (CMAKE_BUILD_TYPE MATCHES "Debug")
	set(X_CONFIG debug)
else ()
	set(X_CONFIG release)
endif ()

if (X_SHARED_LIBS)
	add_definitions(-DX_USE_SHARED)
	set(BUILD_SHARED_LIBS ON)
	set(X_LIB_TYPE SHARED)
else ()
	set(BUILD_SHARED_LIBS OFF)
	set(X_LIB_TYPE STATIC)
endif ()

set(X_TARGET_DIR ${CMAKE_CURRENT_SOURCE_DIR}/target)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${X_TARGET_DIR}/bin/${X_CONFIG})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${X_TARGET_DIR}/lib/${X_CONFIG})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${X_TARGET_DIR}/lib/${X_CONFIG})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${X_TARGET_DIR}/bin/${X_CONFIG})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${X_TARGET_DIR}/lib/${X_CONFIG})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${X_TARGET_DIR}/lib/${X_CONFIG})

if (X_BUILD_XE)
	add_subdirectory(XE)
endif()
if (X_BUILD_XS)
	add_subdirectory(XS)
endif()
if (X_BUILD_XV)
	add_subdirectory(XV)
endif()